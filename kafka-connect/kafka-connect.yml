---
apiVersion: v1
kind: Service
metadata:
  name: rest
spec:
  #type: LoadBalancer
  ports:
    - port: 8083
  clusterIP: None
  selector:
    app: kafka-connect
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka-connect
spec:
  serviceName: "rest"
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka-connect
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "install",
            "image": "confluentinc/cp-kafka-connect:latest",
            "imagePullPolicy": "IfNotPresent",
            "command": ["/bin/bash","-c"],
            "args": ["wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.39.tar.gz -P /etc/kafka-connect/jars"],
            "volumeMounts": [
                {
                    "name": "jars",
                    "mountPath": "/etc/kafka-connect/jars"
                }
            ]
          },
          {
            "name": "get-jars",
            "image": "confluentinc/cp-kafka-connect:latest",
            "imagePullPolicy": "IfNotPresent",
            "command": ["/bin/bash","-c"],
            "args": ["tar -xzf /etc/kafka-connect/jars/mysql-connector-java-5.1.39.tar.gz -C /etc/kafka-connect/jars --strip-components=1 mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar"],
            "volumeMounts": [
                {
                    "name": "jars",
                    "mountPath": "/etc/kafka-connect/jars"
                }
            ]
          },
          {
            "name": "cleaning",
            "image": "confluentinc/cp-kafka-connect:latest",
            "imagePullPolicy": "IfNotPresent",
            "command": ["/bin/bash","-c"],
            "args": ["rm /etc/kafka-connect/jars/mysql-connector-java-5.1.39.tar.gz"],
            "volumeMounts": [
                {
                    "name": "jars",
                    "mountPath": "/etc/kafka-connect/jars"
                }
            ]
          }
        ]'
    spec:
      containers:
      - image: confluentinc/cp-kafka-connect:latest
        name: kafka-connect
        ports:
        - containerPort: 8083
        env:
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: kafka:9092 
        - name: CONNECT_REST_PORT
          value: "8083" 
        - name: CONNECT_GROUP_ID
          value: quickstart-avro
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: quickstart-avro-config 
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: quickstart-avro-offsets
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: quickstart-avro-status
        - name: CONNECT_KEY_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_VALUE_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://registry-0.schema:8081  
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://registry-0.schema:8081 
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: kafka-connect.rest
        - name: CONNECT_LOG4J_ROOT_LOGLEVEL
          value: DEBUG
        volumeMounts:
          - name: file
            mountPath: /tmp/quickstart
          - name: jars
            mountPath: /etc/kafka-connect/jars
            #There's defaults in this folder, such as logging config
            #- name: conf
            #  mountPath: /conf
      volumes:
        #- name: conf
        #  emptyDir: {}
        - name: file
          emptyDir: {}
        - name: jars
          emptyDir: {}
